#!/bin/bash
################################################################################
#                     Copyright (C) 2018 by Christian Mee√üen                   #
#                                                                              #
#                         This file is part of Scripts                         #
#                                                                              #
#        Scripts is free software: you can redistribute it and/or modify       #
#     it under the terms of the GNU General Public License as published by     #
#           the Free Software Foundation version 3 of the License.             #
#                                                                              #
#      GMTScripts is distributed in the hope that it will be useful, but       #
#          WITHOUT ANY WARRANTY; without even the implied warranty of          #
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU       #
#                   General Public License for more details.                   #
#                                                                              #
#      You should have received a copy of the GNU General Public License       #
#       along with Scripts. If not, see <http://www.gnu.org/licenses/>.        #
################################################################################
#
# Perform a parallel calculation with Tesseroids using GMT
# Tested for GMT 5.1.1
#
# Syntax
# tesspar [MODEL] [STATIONS] [NTHREADS]
#      STATIONS must be a NetCDF grid file
set -e
if [ $# -lt 3 ]; then
 echo
 echo "Not enough arguments."
 echo
 echo "Usage: tesspar MODEL STATIONS [args]"
 echo
 echo "MODEL          - Tesseroids model"
 echo "STATIONS       - NetCDF file with station height"
 echo "-n INT         - Total number of threads"
 echo "-nx INT        - Number of threads in E-W direction"
 echo "-ny INT        - Number of threads in N-S direction"
 echo "-o FILENAME    - Output filename (default gz.dat)"
 echo
 exit
fi

R=`date +%s | sha256sum | base64 | head -c 32` # Create a random string
MODEL=$1
STATIONS=$2
FILEOUT='gz.dat'
declare -i NTHREADS=-1
declare -i THREAD_DX=-1
declare -i THREAD_DY=-1

shift 2
while (( "$#" )); do
  if [ "$1" = "-n" ]; then
    NTHREADS=$2
    shift 2
  elif [ "$1" = "-nx" ]; then
    THREAD_DX=$2
    shift 2
  elif [ "$1" = "-ny" ]; then
    THREAD_DY=$2
    shift 2
  elif [ "$1" = "-o" ]; then
    FILEOUT=$2
    shift 2
  else
    echo "ERROR! Unknown argument $1"
    echo
    exit
  fi
done

if [ $NTHREADS -eq -1]; then
  if [ ${THREAD_DX} -eq -1 ] || [ ${THREAD_DY} -eq -1 ]; then
    echo "Error! Amount of threads not correctly defined. If -n is not"
    echo "specified -nx and -ny are required."
    exit
  elif [ ${THREAD_DX} -eq -1 ]; then
    THREAD_DX=`bc <<< "$NTHREADS/${THREAD_DY}"`
  elif [ $THREAD_DY -eq -1 ]; then
    THREAD_DY=`bc <<< "$NTHREADS/${THREAD_DX}"`
  fi
else
  THREAD_DIV=10
  THREAD_DX=`bc <<< "$NTHREADS/${THREAD_DIV}"`
  THREAD_DY=`bc <<< "$NTHREADS/${THREAD_DX}"`
fi

declare -i NTHREADS_USED=`bc <<< "${THREAD_DX}*${THREAD_DY}"`

declare -a INFO=(`grdinfo $STATIONS -C `)
xmin=${INFO[1]}
xmax=${INFO[2]}
ymin=${INFO[3]}
ymax=${INFO[4]}
xinc=${INFO[7]}
yinc=${INFO[8]}


dx=`bc <<< "$xmax-($xmin)"`
dy=`bc <<< "$ymax-($ymin)"`
xi=`bc <<< "scale=10;$dx/${THREAD_DX}"`
yi=`bc <<< "scale=10;$dy/${THREAD_DY}"`

machine=`hostname -s`
datestart=`date +"%Y-%m-%d %H-%M-%S"`


echo 'Using '$NTHREADS' threads'
echo 'Subdiving into'
echo '...' ${THREAD_DX}' longitudinal sectors'
echo '...' ${THREAD_DY}' latitudinal sectors'
echo 'Starting calculation on '$machine > log_$machine.txt
echo 'Threads assigned: '$NTHREADS >> log_$machine.txt
echo 'Time started : ' $datestart >> log_$machine.txt
declare -i THREAD_ID=1
for i in `seq 1 ${THREAD_DX}`; do
    xmint=`bc <<< "scale=10;$xmin+($i-1)*$xi"`
    xmaxt=`bc <<< "scale=10;$xmin+$i*$xi"`
    for j in `seq 1 ${THREAD_DY}`; do
        ymint=`bc <<< "scale=10;$ymin+($j-1)*$yi"`
        ymaxt=`bc <<< "scale=10;$ymin+$j*$yi"`
        ROI_INC=$xmint/$xmaxt/$ymint/$ymaxt
        grdcut $STATIONS -R${ROI_INC} -G$R.stations_${THREAD_ID}.nc
        echo 'Starting thread '${THREAD_ID}' on ROI '${ROI_INC}
        grd2xyz $R.stations_${THREAD_ID}.nc > $R.stations_${THREAD_ID}.xyz
        tessgz $MODEL < $R.stations_${THREAD_ID}.xyz > $R.gz_${THREAD_ID}.dat &
        THREAD_ID+=1
    done
done
wait
dateend=`date +"%Y-%m-%d %H-%M-%S"`
echo 'Time finished: ' $dateend >> log_$machine.txt

echo 'Merging gravity fields'
echo -n > $R.gzmerged.dat
for file in ./$R.gz_*.dat; do
    echo '> '$file
    tail -n+7 $file | sed 's/\t/ /g' >> $R.gzmerged.dat
    rm $file
done
xyz2grd $R.gzmerged.dat -i0,1,2 -I$xinc/$yinc -R$xmin/$xmax/$ymin/$ymax -G$R.stations.nc
xyz2grd $R.gzmerged.dat -i0,1,3 -I$xinc/$ying -R$xmin/$xmax/$ymin/$ymax -G$R.gz.nc

grd2xyz $R.stations.nc > $R.stations.dat
grd2xyz $R.gz.nc -o2 > $R.gz.dat

echo '# Gravity field computed from tesseroid model' > $FILEOUT
echo '# Calculation started : '$datestart >> $FILEOUT
echo '# Calculation finished: '$dateend >> $FILEOUT
echo '# Input model: '$MODEL >> $FILEOUT
echo '# Calculated on: '$machine >> $FILEOUT
echo '# Number of threads used: '${NTHREADS_USED} >> $FILEOUT
echo '# Columns' >> $FILEOUT
echo '# 0 - Lon' >> $FILEOUT
echo '# 1 - Lat' >> $FILEOUT
echo '# 2 - Station height / m' >> $FILEOUT
echo '# 3 - gz / mGal' >> $FILEOUT
gmtconvert $R.stations.dat $R.gz.dat -A >> $FILEOUT

rm $R.*
