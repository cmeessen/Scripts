#!/bin/bash
################################################################################
#                     Copyright (C) 2017 by Christian Mee√üen                   #
#                                                                              #
#                         This file is part of Scripts                         #
#                                                                              #
#        Scripts is free software: you can redistribute it and/or modify       #
#     it under the terms of the GNU General Public License as published by     #
#           the Free Software Foundation version 3 of the License.             #
#                                                                              #
#      GMTScripts is distributed in the hope that it will be useful, but       #
#          WITHOUT ANY WARRANTY; without even the implied warranty of          #
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU       #
#                   General Public License for more details.                   #
#                                                                              #
#      You should have received a copy of the GNU General Public License       #
#       along with Scripts. If not, see <http://www.gnu.org/licenses/>.        #
################################################################################
set -e
setgmt
gmttest

if [ $# -lt 1 ]
then
  echo
  echo "Usage: PlotNCDFWorld InputFile [-i]"
  echo
  echo "       Optional arguments:"
  echo "           -i    Enable illumination"
  echo
  echo "Plots a NetCDF grid file in Robinson projection."
  echo
  exit
fi

InFile=$1
map_width=10
out_format='png'


echo "Input file: $InFile"

echo "Defining color scale"
gmt grd2cpt $InFile -Chaxby -E21 > colors.cpt

scale_dX=$(bc <<< "scale=2; $map_width/2")
out_name=$InFile.ps

echo "Initiate plot"
if [ $# -eq 2 ]
then
  if [ "$2" == "-i" ]
  then
    echo "> Illuminating"
    gmt grdgradient $InFile -Nt1 -A60 -Gillumination.nc
    echo "> Ploting"
    gmt grdimage $InFile -JN0/$map_width -Rd -Iillumination.nc -Ccolors.cpt -K > $out_name
  fi
else
  echo "> Ploting"
  gmt grdimage $InFile -JN0/$map_width -Rd -Ccolors.cpt -K > $out_name
fi
gmt pscoast -J -R -A0/0/1 -Di -W0.1p,black -O -P -K >> $out_name
gmt psbasemap -R -J -Baf -BwNsE --MAP_GRID_CROSS_SIZE_PRIMARY=0p --MAP_ANNOT_ORTHO=W --MAP_TITLE_OFFSET=8p -O -K >> $out_name
gmt psscale -D$scale_dX/-0.2/$map_width/0.3h -Ccolors.cpt -Baf$dZ+l"Value" -Np --MAP_LABEL_OFFSET=0 -O >> $out_name

case "$out_format" in
bmp )
	ftpe='b';;
eps )
	ftpe='e';;
pdf )
	ftpe='f';;
jpg )
	ftpe='j';;
png )
	ftpe='g';;
* )
	ftpe='g';;
esac

gmt psconvert -A -P -E400 -T$ftpe $out_name

rm $out_name
rm gmt.history
rm gmt.conf
rm *.eps *.bb colors.cpt illumination.nc 2> /dev/null

echo "Done."
echo "Output file: $InFile.$out_format"
